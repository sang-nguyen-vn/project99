name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger CI/CD khi có commit vào nhánh 'main'
  pull_request:
    branches:
      - main  # Trigger khi có pull request vào nhánh 'main'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest version
        id: get_version
        run: |
          LATEST_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Current version: $LATEST_VERSION"
          echo "VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Determine new version
        id: versioning
        run: |
          CURRENT_VERSION="${{ env.VERSION }}"
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1 | tr -d 'v')
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          COMMIT_MSG=$(git log -1 --pretty=%B)

          if [[ $COMMIT_MSG == Update:* ]]; then
            PATCH=$((PATCH + 1))
          elif [[ $COMMIT_MSG == Feature:* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ $COMMIT_MSG == Main:* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          fi

          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create new Git tag
        run: |
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ env.NEW_VERSION }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ env.NEW_VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ env.NEW_VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

